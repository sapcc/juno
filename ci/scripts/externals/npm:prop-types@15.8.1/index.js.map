{"version":3,"file":"index.js","sources":["factoryWithThrowingShims.js","index.js"],"sourcesContent":["import _ReactPropTypesSecret from \"./lib/ReactPropTypesSecret\";\nvar exports = {};\nvar ReactPropTypesSecret = _ReactPropTypesSecret;\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\nexports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. \" + \"Use PropTypes.checkPropTypes() to call them. \" + \"Read more at http://fb.me/use-check-prop-types\");\n    err.name = \"Invariant Violation\";\n    throw err;\n  }\n  ;\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  }\n  ;\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};\nexport default exports;","import _factoryWithThrowingShims from \"./factoryWithThrowingShims\";\nvar exports = {};\n// By explicitly using `prop-types` you are opting into new production behavior.\n// http://fb.me/prop-types-in-prod\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexports = _factoryWithThrowingShims();\nexport default exports;"],"names":["exports","ReactPropTypesSecret","_ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","isRequired","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_factoryWithThrowingShims","exports$1"],"mappings":"oCACA,IAAIA,EAAU,GACd,IAAIC,EAAuBC,EAC3B,SAASC,iBACT,SAASC,0BACTA,uBAAuBC,kBAAoBF,cAC3CH,EAAU,WACR,SAASM,KAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWX,EAAf,CAIA,IAAIY,EAAM,IAAIC,MAAM,mLACpBD,EAAIE,KAAO,sBACX,MAAMF,GAGRP,KAAKU,WAAaV,KAClB,SAASW,UACP,OAAOX,KAKT,IAAIY,EAAiB,CACnBC,MAAOb,KACPc,OAAQd,KACRe,KAAMf,KACNgB,KAAMhB,KACNiB,OAAQjB,KACRkB,OAAQlB,KACRmB,OAAQnB,KACRoB,OAAQpB,KACRqB,IAAKrB,KACLsB,QAASX,QACTY,QAASvB,KACTwB,YAAaxB,KACbyB,WAAYd,QACZe,KAAM1B,KACN2B,SAAUhB,QACViB,MAAOjB,QACPkB,UAAWlB,QACXmB,MAAOnB,QACPoB,MAAOpB,QACPqB,eAAgBlC,uBAChBC,kBAAmBF,eAErBe,EAAeqB,UAAYrB,EAC3B,OAAOA,GAET,IAAAsB,EAAexC,ECjDf,IAAIA,EAAU,GAUdA,EAAUwC,IACV,IAAAC,EAAezC"}