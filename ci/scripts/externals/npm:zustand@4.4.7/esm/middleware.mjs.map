{"version":3,"file":"middleware.mjs","sources":["../esm/middleware.mjs"],"sourcesContent":["const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n"],"names":["reduxImpl","reducer","initial","set","_get","api","dispatch","action","state","dispatchFromDevtools","a","redux","trackedConnections","Map","getTrackedConnectionState","name","get","Object","fromEntries","entries","stores","map","key","api2","getState","extractConnectionInformation","store","extensionConnector","options","type","connection","connect","existingConnection","newConnection","devtoolsImpl","fn","devtoolsOptions","enabled","anonymousActionType","env","MODE","window","__REDUX_DEVTOOLS_EXTENSION__","e","console","warn","connectionInformation","isRecording","setState","replace","nameOrAction","r","send","setStateFromDevtools","originalIsRecording","initialState","init","store2","didWarnAboutReservedActionType","originalDispatch","subscribe","message","_a","payload","error","parseJsonThen","keys","length","stateFromDevtools","JSON","stringify","nextLiftedState","lastComputedState","computedStates","slice","devtools","stringified","f","parsed","parse","subscribeWithSelectorImpl","origSubscribe","selector","optListener","listener","equalityFn","is","currentSlice","nextSlice","previousSlice","fireImmediately","subscribeWithSelector","combine","create","assign","createJSONStorage","getStorage","storage","persistStorage","getItem","str2","reviver","str","Promise","then","setItem","newValue","replacer","removeItem","toThenable","input","result","onFulfilled","_onRejected","this","_onFulfilled","onRejected","oldImpl","config","baseOptions","localStorage","serialize","deserialize","partialize","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","Set","finishHydrationListeners","args","thenableSerialize","errorInSync","thenable","serializedValue","catch","savedSetState","configResult","stateFromStorage","hydrate","forEach","cb","postRehydrationCallback","onRehydrateStorage","call","bind","storageValue","deserializedStorageValue","migrate","migratedState","_a2","persist","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","add","delete","onFinishHydration","newImpl","_b","skipHydration","persistImpl"],"mappings":"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"}