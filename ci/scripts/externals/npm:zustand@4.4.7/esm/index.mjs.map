{"version":3,"file":"index.mjs","sources":["../esm/index.mjs"],"sourcesContent":["import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nfunction useStore(api, selector = api.getState, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n"],"names":["useDebugValue","ReactExports","useSyncExternalStoreWithSelector","useSyncExternalStoreExports","didWarnAboutEqualityFn","useStore","api","selector","getState","equalityFn","env","MODE","console","warn","slice","subscribe","getServerState","createImpl","createState","createStore","useBoundStore","Object","assign","create","react"],"mappings":"6JAKA,MAAMA,cAAEA,GAAkBC,EAC1B,MAAMC,iCAAEA,GAAqCC,EAC7C,IAAIC,EAAyB,MAC7B,SAASC,SAASC,EAAKC,EAAWD,EAAIE,SAAUC,GAC9C,gBAAiBC,gBAAkBA,IAAIC,UAAO,KAAY,cAAgBF,IAAeL,EAAwB,CAC/GQ,QAAQC,KACN,0NAEFT,EAAyB,IAC1B,CACD,MAAMU,EAAQZ,EACZI,EAAIS,UACJT,EAAIE,SACJF,EAAIU,gBAAkBV,EAAIE,SAC1BD,EACAE,GAEFT,EAAcc,GACd,OAAOA,CACT,CACA,MAAMG,WAAcC,iBACDR,gBAAkBA,IAAIC,UAAO,KAAY,qBAAuBO,IAAgB,YAC/FN,QAAQC,KACN,mIAGJ,MAAMP,SAAaY,IAAgB,WAAaC,EAAYD,GAAeA,EAC3E,MAAME,cAAgB,CAACb,EAAUE,IAAeJ,SAASC,EAAKC,EAAUE,GACxEY,OAAOC,OAAOF,cAAed,GAC7B,OAAOc,aAAa,EAEjB,MAACG,OAAUL,GAAgBA,EAAcD,WAAWC,GAAeD,WACrE,IAACO,MAASN,iBACMR,gBAAkBA,IAAIC,UAAO,KAAY,cACxDC,QAAQC,KACN,8FAGJ,OAAOU,OAAOL,EAAY"}