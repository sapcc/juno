import{createStore as t}from"zustand/vanilla";export*from"zustand/vanilla";import e from"react";import o from"use-sync-external-store/shim/with-selector.js";const{useDebugValue:r}=e;const{useSyncExternalStoreWithSelector:n}=o;let s=false;function useStore(t,e=t.getState,o){if((import.meta.env?import.meta.env.MODE:void 0)!=="production"&&o&&!s){console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937");s=true}const a=n(t.subscribe,t.getState,t.getServerState||t.getState,e,o);r(a);return a}const createImpl=e=>{(import.meta.env?import.meta.env.MODE:void 0)!=="production"&&typeof e!=="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const o=typeof e==="function"?t(e):e;const useBoundStore=(t,e)=>useStore(o,t,e);Object.assign(useBoundStore,o);return useBoundStore};const create=t=>t?createImpl(t):createImpl;var react=t=>{(import.meta.env?import.meta.env.MODE:void 0)!=="production"&&console.warn("[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.");return create(t)};export{create,react as default,useStore};
//# sourceMappingURL=index.mjs.map
