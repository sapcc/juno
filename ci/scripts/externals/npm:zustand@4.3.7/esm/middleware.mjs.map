{"version":3,"file":"middleware.mjs","sources":["../esm/middleware.mjs"],"sourcesContent":["const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env && import.meta.env.MODE) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env && import.meta.env.MODE) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n"],"names":["reduxImpl","reducer","initial","set","_get","api","dispatch","action","state","dispatchFromDevtools","a","redux","trackedConnections","Map","getTrackedConnectionState","name","get","Object","fromEntries","entries","stores","map","key","api2","getState","extractConnectionInformation","store","extensionConnector","options","type","connection","connect","existingConnection","newConnection","devtoolsImpl","fn","devtoolsOptions","enabled","anonymousActionType","import","meta","env","MODE","window","__REDUX_DEVTOOLS_EXTENSION__","e","console","warn","connectionInformation","isRecording","setState","replace","nameOrAction","r","send","setStateFromDevtools","originalIsRecording","initialState","init","store2","didWarnAboutReservedActionType","originalDispatch","subscribe","message","_a","payload","error","parseJsonThen","keys","length","stateFromDevtools","JSON","stringify","nextLiftedState","lastComputedState","computedStates","slice","devtools","stringified","f","parsed","parse","subscribeWithSelectorImpl","origSubscribe","selector","optListener","listener","equalityFn","is","currentSlice","nextSlice","previousSlice","fireImmediately","subscribeWithSelector","combine","create","assign","createJSONStorage","getStorage","storage","persistStorage","getItem","str2","str","Promise","then","setItem","newValue","removeItem","toThenable","input","result","onFulfilled","catch","_onRejected","this","_onFulfilled","onRejected","oldImpl","config","baseOptions","localStorage","serialize","deserialize","partialize","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","Set","finishHydrationListeners","args","thenableSerialize","errorInSync","thenable","serializedValue","savedSetState","configResult","stateFromStorage","hydrate","forEach","cb","postRehydrationCallback","onRehydrateStorage","call","bind","storageValue","deserializedStorageValue","migrate","migratedState","_a2","persist","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","add","delete","onFinishHydration","newImpl","_b","skipHydration","persistImpl"],"mappings":"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"}