ARG BASE_URL_PLACEHOLDER="%BASE_URL%"

# Latest assets server image
FROM keppel.eu-de-1.cloud.sap/ccloud/juno-v2-assets-server:latest AS lastbuild

# Base image
FROM keppel.eu-de-1.cloud.sap/ccloud/juno-v2-base:latest AS base 
ARG BASE_URL_PLACEHOLDER

RUN mkdir -p /tmp/latest

# copy all app and lib builds (from dist) to tmp/latest  
# input cames from the pipeline

# -> /apps/whois/build, package.json
# -> /apps/volta/build, package.json
# -> /libs/juno-ui-components/build, package.json
ADD . /tmp/latest
WORKDIR /tmp/latest

ARG NPM_PROVIDER="jspm"
ARG VERBOSE="false"

# create folder in tmp for merged assets
RUN mkdir -p /tmp/final 
# copy old versions of assets to current layer
COPY --from=lastbuild /usr/share/nginx/html /tmp/final

# merge latest assets over the old assets 
# RUN rsync -avu "/tmp/latest/" "/tmp/final"  
RUN \
  for PACKAGE in ./**/*/package.json; do \
  VERSION=$(jq -r .version $PACKAGE); \
  DIR=$(dirname $PACKAGE); \
  rm -rf /tmp/final/$DIR ; rm -rf /tmp/final/$DIR@$VERSION ; rm -rf /tmp/final/$DIR@latest ; \
  cp -r $DIR /tmp/final/$DIR@$VERSION ; cp -r $DIR /tmp/final/$DIR@latest ; \
  done ; 

RUN mkdir -p /tmp/final/global && cp /juno/README.md /tmp/final/global/

WORKDIR /tmp/final 

# delete ald importmaps and manifests
RUN rm -rf externals_* importmap* importmap*


# Create importmaps and manifest
RUN \
  node /juno/scripts/generate_importmap.mjs \
  --provider=$NPM_PROVIDER \
  --external-path=externals \
  --exit-on-error=$EXIT_ON_ERROR \
  --src=./ \
  --base-url=$BASE_URL_PLACEHOLDER \
  --ignore-externals=false \
  --output=./importmap.json  \
  --verbose=$VERBOSE ; \
  \
  node /juno/scripts/generate_manifest.mjs \
  --src=./ \
  --output=./manifest.json \
  --base-url=$BASE_URL_PLACEHOLDER \
  --verbose=$VERBOSE ;

# RESULTS
# /tmp/final/apps/whois@version/files
# /tmp/final/apps/volta/files
# /tmp/final/libs/juno-ui-components/files
# /tmp/final/assets/static files
# /tmp/final/importmap.json
# /tmp/final/importmap.dev.json
# /tmp/final/manifest.json

# Check the integrity of the file structure
RUN chmod +x /juno/scripts/check_file_integrity.sh && \
  /juno/scripts/check_file_integrity.sh global apps libs assets externals index.html manifest.json importmap.json


############### FINAL IMAGE! ###################
FROM keppel.eu-de-1.cloud.sap/ccloud-dockerhub-mirror/library/nginx:alpine AS server
ARG BASE_URL_PLACEHOLDER

LABEL source_repository="https://github.com/sapcc/juno"

RUN apk --no-cache add rsync

# delete default html files of nginx
RUN rm -rf /usr/share/nginx/html
# copy new version 
COPY --from=base /tmp/final "/usr/share/nginx/html"

# Replace default nginx config
RUN rm -rf /etc/nginx/conf.d/default.conf && echo -e $'\
  server { \n \
  \tlisten       80; \n \
  \tserver_name  localhost; \n \
  \tinclude mime.types; \n \
  \ttypes \n \ 
  \t{ \n \
  \t\tapplication/javascript mjs js; \n \
  \t} \n \
  \n \
  \tlocation / { \n \
  \t\troot   /usr/share/nginx/html; \n \
  \t\tindex  index.html index.htm; \n \
  \t} \n \
  \n \
  \tlocation ~* (importmap|manifest).*\.json$ { \n \
  \t\troot  /usr/share/nginx/html; \n \
  \t\tsub_filter '$BASE_URL_PLACEHOLDER$' "https://$host"; \n \
  \t\tsub_filter_types *; \n \
  \t\tsub_filter_once off; \n \
  \t\tadd_header Cache-Control "no-store, no-cache"; \n \
  \t} \n \
  \n \
  \tlocation ~* .*widget-loader@latest.*\.js$ { \n \
  \t\troot /usr/share/nginx/html; \n \
  \t\tadd_header Cache-Control "no-store, no-cache"; \n \
  \t}\n \
  \n \
  \t#error_page  404              /404.html; \n \
  \n \
  \t# redirect server error pages to the static page /50x.html \n \
  \terror_page   500 502 503 504  /50x.html; \n \
  \n \
  \tlocation = /50x.html { \n \
  \t\troot   /usr/share/nginx/html; \n \
  \t} \n \
  } \n \
  ' > /etc/nginx/conf.d/default.conf

# Create the index.html with the assets-overview micro frontend app
RUN echo -e $'\
  <!DOCTYPE html> \n\
  <html style="height: 100vh; background: rgb(13, 20, 28);">\n\
  \t<head>\n\
  \t\t<title>Juno Assets</title> \n \
  \t\t<link rel="icon" href="/assets/favicon.ico"/> \n\
  \t</head>\n\
  \t<body style="height: 100vh;">\n \
  \t\t<script \n\
  \t\t\tsrc="/apps/widget-loader@latest/build/app.js" \n\ 
  \t\t\tdata-name="assets-overview" \n\
  \t\t\tdata-props-manifest-url="/manifest.json"></script>\n\
  \t</body>\n\
  </html>' > /usr/share/nginx/html/index.html   

# default command is nginx
# CMD nginx -g "daemon off;"