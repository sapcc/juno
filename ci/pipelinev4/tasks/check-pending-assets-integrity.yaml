platform: linux

image_resource:
  type: docker-image
  source:
    repository: keppel.eu-de-1.cloud.sap/ccloud/juno-v3-ci-helper
    tag: "latest"

inputs:
  - name: input
outputs:
  - name: output # where do you want to download

params:

# describe the code
# 1. check if the name, version and repository are set in the package.json file
# 2. check if the file defined in main or module exists
run:
  path: /bin/bash
  args:
    - -c
    - |
      FAIL='\033[0;31m'
      SUCCESS='\033[0;32m'
      INFO='\033[0;36m'
      NC='\033[0m' # No Color

      EXIT_CODE=1 # error

      # create the build-log file 
      rm -f output/build-log.json && touch output/build-log.json && jq -n '[]' > output/build-log.json
      for f in ./input/**/*/package.json; do
        ERROR=""
        PASSED=true
        NAME=$(basename $(dirname $f))
        TYPE=$(basename $(dirname $(dirname $f)))
        VERSION=""
        echo -e "${INFO}found $NAME in $TYPE, checking... ${NC}"
        
        if [ "$TYPE" != "libs" ] && [ "$TYPE" != "apps" ]; then
          echo -e "${FAIL}  parent folder should be apps or libs, found $TYPE${NC}"
          ERROR="${ERROR} $invalid parent folder $TYPE,"
          PASSED=false
        fi

        # loop over keys name, repository and version
        for key in name version repository; do
          echo -ne "${INFO}  $key ${NC}"
          VALUE=$(grep -o "\"$key\":\\s*\"[^\"]*" $f | grep -o '[^"]*$')
          if [ "$key" == "version" ]; then
            VERSION=$VALUE
          fi
          # get the value of the key
          # in one line

          if [ -z "$VALUE" ]; then
            echo -e "${FAIL}missing${NC}"
            ERROR="${ERROR} $key is missing,"
            PASSED=false
          else 
            echo -e "${SUCCESS}${VALUE}${NC}"
          fi
        done
        
        if [ $TYPE == "libs" ]; then
          echo -e "${INFO}  main file ${SUCCESS}not applicable${NC}"
          continue
        fi

        MAIN=$(grep -o '"main":\s*"[^"]*' $f | grep -o '[^"]*$')

        if [ -z $MAIN ]; then 
          MAIN=$(grep -o '"module":\s*"[^"]*' $f | grep -o '[^"]*$')
          if [ -z $MAIN ] || [ ! -f "./input/$TYPE/$NAME/$MAIN" ]; then
            echo -e "${INFO}  main file ${FAIL}missing${NC}"
            ERROR="${ERROR} main file is missing,"
            PASSED=false
          else
            echo -e "${INFO}  main file ${SUCCESS}$MAIN${NC}"  
          fi  
        fi  

        if $PASSED; then 
          echo -e "${SUCCESS}  PASSED${NC}"
          EXIT_CODE=0 # success, we have at least one valid asset
          mkdir -p ./output/$TYPE/$NAME && cp -r $(dirname $f) ./output/$TYPE/
        else 
          echo -e "${FAIL}  FAILED${NC}"
        fi

        jq ". += [{\"name\":\"$NAME\",\"type\":\"$TYPE\",\"version\":\"$VERSION\",\"date\":\"$(date +%s)\",\"passed\":$PASSED,\"error\":\"$ERROR\" }]" output/build-log.json > tmp.json && mv tmp.json output/build-log.json 
      done

      # exit with the code 
      exit $EXIT_CODE
