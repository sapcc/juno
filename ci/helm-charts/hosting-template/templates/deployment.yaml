kind: Deployment
apiVersion: apps/v1

metadata:
  name: hosting-###NAME###
  namespace: juno

spec:
  selector:
    matchLabels:
      app: hosting-###NAME###
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        app: hosting-###NAME###
    spec:
      # The preStop hook below sleeps 30 seconds, extend the gracePeriod accordingly
      terminationGracePeriodSeconds: 60
      containers:
        - name: hosting-###NAME###
          image: "{{ .Values.global.registry }}/juno-v2-hosting:{{ .Values.global.hosting_image_tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: web
              containerPort: 80
          env:
            - name: PAGE_TITLE
              value: ###NAME###
            - name: FAVICON_URL
              value: https://assets.juno.{{ $.Values.global.region }}.cloud.sap/assets/favicon.ico
            - name: NAME
              value: ###NAME###
            - name: VERSION
              value: latest
            - name: ASSETS_HOST
              value: https://assets.juno.{{ $.Values.global.region }}.cloud.sap
            - name: PROPS
              value: "###PROPS###"

          livenessProbe:
            httpGet:
              path: /
              port: 80
            timeoutSeconds: 10
            periodSeconds: 60
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: 80
            timeoutSeconds: 5
            periodSeconds: 5
          resources:
            limits:
              cpu: "1000m"
              memory: "256Mi"
            requests:
              cpu: "1000m"
              memory: "256Mi"
          lifecycle:
            preStop:
              exec:
                #Give the ingress some time to reload its config
                command: ["/bin/sh", "-c", "sleep 30"]
