name: Juno (build & deploy)

on:
  push:
    branches:
      - gh-ci
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # On release creation
  # release:
  #   types: [created]

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "apps/exampleapp"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build-and-deploy:
    runs-on: [ubuntu-latest]
    # defaults:
    #   run:
    #     working-directory: ./apps/exampleapp
    env:
      ACTIONS_RUNNER_DEBUG: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: https://npm.pkg.github.com/
          scope: "@${{ github.repository_owner }}"
      - name: build libs
        run: |
          npm install
          npm run build-libs

      - name: build asset
        run: |
          # replace
          jq '.name = "@${{ github.repository_owner }}/exampleapp", .private = false' \
          ./apps/exampleapp/package.json > "/tmp/test.json" && \
          mv /tmp/test.json ./apps/exampleapp/package.json
          
          #jq '.private = false' ./apps/exampleapp/package.json > "/tmp/test.json" && mv /tmp/test.json ./apps/exampleapp/package.json
          #cp $NPM_CONFIG_USERCONFIG ./
          #echo "====================1"
          #cat ./.npmrc
          #echo "====================2"
          npm -w @${{ github.repository_owner }}/exampleapp run build 

      # - name: Build app
      #   run: npm run build

      - name: Publish to github packages
        run: |
          # copy generated .npmrc to repository 
          cp $NPM_CONFIG_USERCONFIG ./
          # publish to https://github.com/${{ github.repository_owner }}/packages
          npm -w @${{ github.repository_owner }}/exampleapp publish #--dry-run
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
