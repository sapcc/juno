{
  "name": "supernova",
  "version": "0.9.7",
  "author": "Juno team (SAP)",
  "license": "MIT",
  "source": "src/index.js",
  "module": "build/index.js",
  "private": true,
  "devDependencies": {
    "@babel/core": "^7.20.2",
    "@svgr/core": "^7.0.0",
    "@svgr/plugin-jsx": "^7.0.0",
    "@tanstack/react-query": "4.28.0",
    "@testing-library/dom": "^8.19.0",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^14.4.3",
    "assert": "^2.0.0",
    "autoprefixer": "^10.4.2",
    "babel-jest": "^29.3.1",
    "babel-plugin-transform-import-meta": "^2.2.0",
    "communicator": "*",
    "esbuild": "^0.17.11",
    "esbuild-sass-plugin": "^2.6.0",
    "immer": "^9.0.21",
    "interweave": "^13.0.0",
    "jest": "^29.3.1",
    "jest-environment-jsdom": "^29.3.1",
    "juno-ui-components": "*",
    "luxon": "^2.3.0",
    "messages-provider": "*",
    "postcss": "^8.4.21",
    "postcss-url": "^10.1.3",
    "prop-types": "^15.8.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-test-renderer": "^18.2.0",
    "sass": "^1.60.0",
    "shadow-dom-testing-library": "^1.7.1",
    "tailwindcss": "^3.3.1",
    "url-state-provider": "*",
    "util": "^0.12.4",
    "zustand": "4.3.7"
  },
  "peerDependencies": {
    "@tanstack/react-query": "4.28.0",
    "custom-event-polyfill": "^1.0.7",
    "juno-ui-components": "*",
    "luxon": "^2.3.0",
    "messages-provider": "*",
    "prop-types": "^15.8.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "url-state-provider": "*",
    "zustand": "4.3.7"
  },
  "importmapExtras": {
    "zustand/middleware": "4.3.7"
  },
  "scripts": {
    "start": "NODE_ENV=development node esbuild.config.js --port=$APP_PORT --serve --watch",
    "test": "jest",
    "build": "NODE_ENV=production node esbuild.config.js"
  },
  "appProps": {
    "theme": {
      "value": "theme-dark",
      "type": "optional",
      "description": "Override the default theme. Possible values are theme-light or theme-dark (default)"
    },
    "embedded": {
      "value": "false",
      "type": "optional",
      "description": "Set to true if app is to be embedded in another existing app or page, like e.g. Elektra.  If set to true the app won't render a page header/footer and instead render only the content. The default value is false."
    },
    "endpoint": {
      "value": "",
      "type": "required",
      "description": "Alertmanager API Endpoint URL"
    },
    "filterLabels": {
      "value": null,
      "type": "optional",
      "description": "FilterLabels are the labels shown in the filter dropdown, enabling users to filter alerts based on specific criteria. The 'Status' label serves as a default filter, automatically computed from the alert status attribute and will be not overwritten. The labels must be an array of strings. Example: [\"app\", \"cluster\", \"cluster_type\"]"
    },
    "silenceExcludedLabels": {
      "value": null,
      "type": "optional",
      "description": "SilenceExcludedLabels are labels that are initially excluded by default when creating a silence. However, they can be added if necessary when utilizing the advanced options in the silence form. The labels must be an array of strings. Example: [\"pod\", \"pod_name\", \"instance\"]"
    }
  },
  "appDependencies": {
    "auth": "latest"
  },
  "appPreview": true
}
